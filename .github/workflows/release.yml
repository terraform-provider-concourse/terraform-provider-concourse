name: release
on:
  push:
    tags:
      - 'u*'

jobs:

  test:  # this is cloned from ci.yml until github actions support job reuse
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: '1.14'

      - name: checkout
        uses: actions/checkout@v1

      - name: ensure-containers-exist
        run: |
          docker-compose up -d && docker-compose down

      - name: integration-tests
        run: sudo make integration-tests

  #create-release:
    #runs-on: ubuntu-latest
    #needs: test
    #steps:
      #- name: create-release
        #id: create-release
        #uses: actions/create-release@v1
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #with:
          #tag_name: ${{ github.ref }}
          #release_name: ${{ github.ref }}
          #body: A dummy release
          #draft: true
    #outputs:
      #release_upload_url: ${{ steps.create-release.outputs.upload_url }}
  get-tag-name:
    runs-on: ubuntu-latest
    steps:
      - id: get-tag-name-step
        run: echo "::set-output name=tag_name::${GITHUB_REF/refs\/tags\//}"
    outputs:
      tag_name: ${{ steps.get-tag-name-step.outputs.tag_name }}

  build:
    runs-on: ubuntu-latest
    needs: [ "test", "get-tag-name" ]
    strategy:
      matrix:
        goos: [ "linux", "darwin" ]
    steps:
      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: '1.14'

      - name: checkout
        uses: actions/checkout@v1

      - name: compile
        id: compile
        env:
          BINARY_NAME: terraform-provider-concourse_${{ needs.get-tag-name.outputs.tag_name }}
          ZIP_NAME: terraform-provider-concourse_${{ needs.get-tag-name.outputs.tag_name }}_${{ matrix.goos }}_amd64.zip
        run: |
          GOOS="${{ matrix.goos }}" make
          mv terraform-provider-concourse $BINARY_NAME
          zip $ZIP_NAME $BINARY_NAME
          echo "::set-output name=zip_name::$ZIP_NAME"

      - id: upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.compile.outputs.zip_name }}
          path: ./${{ steps.compile.outputs.zip_name }}

  sign:
    runs-on: ubuntu-latest
    needs: [ "build", "get-tag-name" ]
    steps:
      - id: download-artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts/
      - id: gather-and-hash
        env:
          HASH_FILE_NAME: terraform-provider-concourse_${{ needs.get-tag-name.outputs.tag_name }}_SHA256SUMS
        run: |
          mkdir gathered
          cp artifacts/*.zip/*.zip gathered/
          pushd gathered
          sha256sum *.zip > $HASH_FILE_NAME
          # TODO sign
          popd
          find gathered/ -type f -printf '%f\n' | jq --raw-input --slurp 'split("\n")' > all_artifacts.json
          echo "::set-output name=hash_file_name::$HASH_FILE_NAME"
          echo -n "::set-output name=all_artifacts_json::"
          cat all_artifacts.json
      - id: upload-hash-file-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.gather-and-hash.outputs.hash_file_name }}
          path: ./gathered/${{ steps.gather-and-hash.outputs.hash_file_name }}
    outputs:
      all_artifacts_json: ${{ steps.gather-and-hash.outputs.all_artifacts_json }}
        
          
      
        
        #with:
          #upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          #asset_path: ./${{ steps.compile.outputs.zip_name }}
          #asset_name: ${{ steps.compile.outputs.zip_name }}
          #asset_content_type: application/zip
