name: release
on:
  push:
    tags:
      - 'u*'

jobs:

  test:  # this is cloned from ci.yml until github actions support job reuse
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: '1.14'

      - name: checkout
        uses: actions/checkout@v1

      - name: ensure-containers-exist
        run: |
          docker-compose up -d && docker-compose down

      - name: integration-tests
        run: sudo make integration-tests

  create-release:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: create-release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: A dummy release
          draft: true
    outputs:
      release_upload_url: ${{ steps.create-release.outputs.upload_url }}

  build:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        goos: [ "linux", "darwin" ]
    steps:
      - name: get-tag-name
        id: get-tag-name
        run: echo ::set-output tag_name=${GITHUB_REF/refs\/tags\//}

      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: '1.14'

      - name: checkout
        uses: actions/checkout@v1

      - name: compile
        id: compile
        env:
          BINARY_NAME: terraform-provider-concourse_${{ steps.get-tag-name.outputs.tag_name }}
          ZIP_NAME: terraform-provider-concourse_${{ steps.get-tag-name.outputs.tag_name }}_${{ matrix.goos }}_amd64.zip
        run: |
          GOOS="${{ matrix.goos }}" make
          mv terraform-provider-concourse $BINARY_NAME
          zip $ZIP_NAME $BINARY_NAME
          echo "::set-output zip_name=$ZIP_NAME"

      - name: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: ./${{ needs.compile.outputs.zip_name }}
          asset_name: ${{ needs.compile.outputs.zip_name }}
          asset_content_type: application/zip
